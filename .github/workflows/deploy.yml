# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Dankira Izipay Docs

on:
  push:
    branches: [main]  # Cambiar a la rama que uses para el despliegue
  workflow_dispatch:  # Permite ejecutar manualmente el flujo desde la pestaña Actions

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # No necesario si no usas `lastUpdated` en VitePress
      # - uses: pnpm/action-setup@v3 # Descomenta esto si usas pnpm
      #   with:
      #     version: 9 # No necesario si has configurado "packageManager" en package.json
      # - uses: oven-sh/setup-bun@v1 # Descomenta esto si usas Bun
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm  # o pnpm / yarn, dependiendo del gestor que uses
      - name: Install dependencies
        run: |
          rm -rf node_modules # Elimina node_modules en caso de que haya problemas con dependencias previas
          rm package-lock.json # Elimina package-lock.json en caso de que esté corrupto
          npm install  # Usar npm install para generar un nuevo package-lock.json si no existe
      - name: Build with VitePress
        run: npm run docs:build  # o pnpm docs:build / yarn docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist  # Directorio donde VitePress coloca la construcción final

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
